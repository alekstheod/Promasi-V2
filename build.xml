<?xml version="1.0" encoding="UTF-8"?>
<project name="PRO.MA.SI" default="dist" basedir=".">
	<!--Define the source folders to be compiled-->
	<property name="CoreSrc" location="Core" />
	<property name="ShellSrc" location="Shell" />
	<property name="UISrc" location="UI" />
	<property name="ModelSrc" location="Model" />
	<property name="CommunicationSrc" location="Communication" />
	<property name="UtilitiesSrc" location="Utilities" />
	<property name="CoreTests" location="Core_Tests" />
	<property name="UtilitiesTests" location="Utilities_Tests" />
	<!--Take a timestamp-->
	<tstamp />
	<!--Define other variables-->
	<property name="Version" value="v0.1.0_M${DSTAMP}-${TSTAMP}" />

	<!--Define the output folders.-->
	<!--The releases folder contains all the releases of promasi.-->
	<property name="releases" location="Releases" />
	<!--The build root folder see buildTests and build variables.-->
	<property name="buildRoot" location="Build" />
	<!--The build folder contains all the compiled class files.-->
	<property name="build" location="Build/Prod" />
	<!--The dist folder contains the installation files-->
	<property name="dist" location="Dist" />
	<!--The build test folder contains all the compiled test classes-->
	<property name="buildTests" location="Build/Tests" />
	<!--All the reports from the junit will be saved here-->
	<property name="testReports" location="${dist}/TestReports" />

	<!--Define the list with all the dependencies-->
	<filelist id="allDependencies">
		<file name="Libraries/Apache/Commons/Proper/commons-beanutils-1.8.0/commons-beanutils-1.8.0.jar" />
		<file name="Libraries/Apache/Commons/Proper/commons-beanutils-1.8.0/commons-beanutils-bean-collections-1.8.0.jar" />
		<file name="Libraries/Apache/Commons/Proper/commons-beanutils-1.8.0/commons-beanutils-core-1.8.0" />
		<file name="Libraries/Apache/Commons/Proper/commons-betwixt-0.8/commons-betwixt-0.8.jar" />
		<file name="Libraries/Apache/Commons/Proper/commons-collections-3.2.1/commons-collections-3.2.1.jar" />
		<file name="Libraries/Apache/Commons/Proper/commons-configuration-1.5/commons-configuration-1.5.jar" />
		<file name="Libraries/Apache/Commons/Proper/commons-digester-1.8/commons-digester-1.8.jar" />
		<file name="Libraries/Apache/Commons/Proper/commons-io-1.4/commons-io-1.4.jar" />
		<file name="Libraries/Apache/Commons/Proper/commons-jxpath-1.3/commons-jxpath-1.3.jar" />
		<file name="Libraries/Apache/Commons/Proper/commons-lang-2.4/commons-lang-2.4.jar" />
		<file name="Libraries/Apache/Commons/Proper/commons-logging-1.1.1/commons-logging-1.1.1.jar" />
		<file name="Libraries/Apache/Commons/Proper/commons-logging-1.1.1/commons-logging-1.1.1.jar" />
		<file name="Libraries/Apache/Commons/Proper/commons-logging-1.1.1/commons-logging-adapters-1.1.1.jar" />
		<file name="Libraries/Apache/Commons/Proper/commons-logging-1.1.1/commons-logging-api-1.1.1.jar" />
		<file name="Libraries/Apache/Commons/Proper/commons-math-1.2/commons-math-1.2.jar" />
		<file name="Libraries/Apache/Logging Services/Log4j-1.2.15/log4j-1.2.15.jar" />
		<file name="Libraries/Apache/Logging Services/log4j-extras-1.0/apache-log4j-extras-1.0.jar" />
		<file name="Libraries/Other/Gef-0.12.4/gef.jar" />
		<file name="Libraries/Other/jep-2.4.1/jep-2.4.1.jar" />
		<file name="Libraries/Other/jep-2.4.1/ext-1.1.1.jar" />
		<file name="Libraries/Swing/Components/swingx/swingx-0.9.5.jar" />
		<file name="Libraries/Swing/LayoutManagers/miglayout-3.6/miglayout-3.6.jar" />
		<file name="Libraries/Swing/Components/jide-oss-2.4.4/jide-oss-2.4.4.jar" />
		<file name="Libraries/Swing/JFreechart-1.0.11/jfreechart-1.0.11.jar" />
		<file name="Libraries/Swing/JCommon-1.0.14/jcommon-1.0.14.jar" />
		<file name="Libraries/Swing/JCommon-1.0.14/jcommon-xml-1.0.14.jar" />
		<file name="Libraries/Other/Joda-Time-1.6/joda-time-1.6.jar" />
		<file name="Libraries/Other/jta-1.1/jta-1.1.jar" />
		<file name="Libraries/Other/Beans Binding 1.2.1/beansbinding-1.2.1.jar" />
		<file name="Libraries/Swing/JXLayer-3.0/jxlayer-3.0.jar" />
		<file name="Libraries/Other/Filters/Filters.jar" />
	</filelist>

	<!--Creates the needed directories-->
	<target name="init" depends="clean">
		<mkdir dir="${build}" />
		<mkdir dir="${buildTests}" />
		<mkdir dir="${dist}" />
		<mkdir dir="${testReports}" />
		<mkdir dir="${dist}/lib" />
	</target>

	<!--Cleans the directories-->
	<target name="clean" description="clean up">
		<delete dir="${buildRoot}" />
		<delete dir="${dist}" />
	</target>

	<!--Compiles the UI-->
	<target name="UI" depends="init,Core,Shell">
		<javac srcdir="${UISrc}" destdir="${build}">
			<classpath>
				<filelist refid="allDependencies" />
			</classpath>
		</javac>
		<!--The javac will copy only the compiled classes to the build directory.Copy any other resource to the build directory-->
		<copy todir="${build}/org/promasi/ui/gmtools/coredesigner/resources">
			<fileset dir="${UISrc}/org/promasi/ui/gmtools/coredesigner/resources">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy todir="${build}/org/promasi/ui/promasiui/promasidesktop/resources">
			<fileset dir="${UISrc}/org/promasi/ui/promasiui/promasidesktop/resources">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<!--Compiles the Core-->
	<target name="Core" depends="Communication,Utilities">
		<javac srcdir="${CoreSrc}" destdir="${build}">
			<classpath>
				<filelist refid="allDependencies" />
			</classpath>
		</javac>
	</target>

	<!--Compiles the Communication-->
	<target name="Communication" depends="">
		<javac srcdir="${CommunicationSrc}" destdir="${build}">
			<classpath>
				<filelist refid="allDependencies" />
			</classpath>
		</javac>
	</target>

	<!--Compiles the Model-->
	<target name="Model" depends="Utilities">
		<javac srcdir="${ModelSrc}" destdir="${build}">
			<classpath>
				<filelist refid="allDependencies" />
			</classpath>
		</javac>
	</target>

	<!--Compiles the Utilities-->
	<target name="Utilities" depends="">
		<javac srcdir="${UtilitiesSrc}" destdir="${build}">
			<classpath>
				<filelist refid="allDependencies" />
			</classpath>
		</javac>
	</target>

	<!--Compiles the Shell-->
	<target name="Shell" depends="Model">
		<javac srcdir="${ShellSrc}" destdir="${build}">
			<classpath>
				<filelist refid="allDependencies" />
			</classpath>
		</javac>
	</target>

	<!--Compiles the tests-->
	<target name="Tests" depends="Core,Utilities">
		<javac srcdir="${CoreTests}" destdir="${buildTests}">
			<classpath>
				<filelist refid="allDependencies" />
				<filelist id="testDependencies">
					<file name="Libraries/JUnit/junit-4.5.jar" />
				</filelist>
				<path location="${build}" />
			</classpath>
		</javac>
		<javac srcdir="${UtilitiesTests}" destdir="${buildTests}">
			<classpath>
				<filelist refid="allDependencies" />
				<filelist id="testDependencies">
					<file name="Libraries/JUnit/junit-4.5.jar" />
				</filelist>
				<path location="${build}" />
			</classpath>
		</javac>
	</target>

	<!--Creates the Core designer jar-->
	<target name="CoreDesignerJar" depends="UI,CoreJar,CommunicationJar,UtilitiesJar">
		<!--Define props-->
		<property name="CoreDesignerJarName" value="Core-Designer-${Version}.jar" />
		<property name="CoreDesignerMainClass" value="org.promasi.ui.gmtools.coredesigner.Application" />
		<!--Create the jar file-->
		<jar jarfile="${dist}/${CoreDesignerJarName}" basedir="${build}" includes="org/promasi/ui/gmtools/coredesigner/**">
			<manifest>
				<attribute name="Created-By" value="Grigoriadis Grigorios,Nikos Petalidis" />
				<attribute name="Specification-Version" value="${Version}" />
				<attribute name="Specification-Title" value="Core-Designer" />
				<attribute name="Implementation-Version" value="${Version}" />
				<attribute name="Implementation-Title" value="org.promasi" />
			</manifest>
		</jar>
		<!--Copy the libraries to the lib folder-->
		<copy todir="${dist}/lib" flatten="true">
			<path>
				<filelist refid="allDependencies" />
			</path>
		</copy>

		<!--Create a property that contains all library paths with the : as seperator-->
		<pathconvert property="CoreDesignerLibsUnix" pathsep=":">
			<mapper>
				<chainedmapper>
					<flattenmapper />
					<globmapper from="*" to="lib/*" />
				</chainedmapper>
			</mapper>

			<path>
				<fileset dir="${dist}/lib">
					<include name="**/*.jar" />
				</fileset>
			</path>
		</pathconvert>
		<!--Create a property that contains all library paths with the ; as seperator-->
		<pathconvert property="CoreDesignerLibsWindows" pathsep=";">
			<mapper>
				<chainedmapper>
					<flattenmapper />
					<globmapper from="*" to="lib/*" />
				</chainedmapper>
			</mapper>

			<path>
				<fileset dir="${dist}/lib">
					<include name="**/*.jar" />
				</fileset>
			</path>
		</pathconvert>
		<!--Create an sh file to run for linux.-->
		<echo file="${dist}/Core-Designer.sh">java -classpath ${CoreDesignerJarName}:${CoreDesignerLibsUnix} ${CoreDesignerMainClass}</echo>
		<chmod perm="ugo+rx" file="${dist}/Core-Designer.sh" />
		<!--Create a bat file to run for windows-->
		<echo file="${dist}/Core-Designer.bat">java -classpath ${CoreDesignerJarName};${CoreDesignerLibsWindows} ${CoreDesignerMainClass}</echo>
		<chmod perm="ugo+rx" file="${dist}/Core-Designer.bat" />
	</target>

	<!--Creates the Core designer jar-->
	<target name="PromasiDesktopJar" depends="UI,ShellJar,ModelJar">
		<!--Define props-->
		<property name="PromasiDesktopJarName" value="Promasi-Desktop-${Version}.jar" />
		<property name="PromasiDesktopMainClass" value="org.promasi.ui.promasiui.promasidesktop.Application" />
		<!--Create the jar file-->
		<jar jarfile="${dist}/${PromasiDesktopJarName}" basedir="${build}" includes="org/promasi/ui/promasiui/promasidesktop/**">
			<manifest>
				<attribute name="Created-By" value="Grigoriadis Grigorios,Nikos Petalidis" />
				<attribute name="Specification-Version" value="${Version}" />
				<attribute name="Specification-Title" value="Promasi-Desktop" />
				<attribute name="Implementation-Version" value="${Version}" />
				<attribute name="Implementation-Title" value="org.promasi" />
			</manifest>
		</jar>
		<!--Copy the libraries to the lib folder-->
		<copy todir="${dist}/lib" flatten="true">
			<path>
				<filelist refid="allDependencies" />
			</path>
		</copy>

		<!--Create a property that contains all library paths with the : as seperator-->
		<pathconvert property="PromasiDesktopLibsUnix" pathsep=":">
			<mapper>
				<chainedmapper>
					<flattenmapper />
					<globmapper from="*" to="lib/*" />
				</chainedmapper>
			</mapper>

			<path>
				<fileset dir="${dist}/lib">
					<include name="**/*.jar" />
				</fileset>
			</path>
		</pathconvert>
		<!--Create a property that contains all library paths with the ; as seperator-->
		<pathconvert property="PromasiDesktopLibsWindows" pathsep=";">
			<mapper>
				<chainedmapper>
					<flattenmapper />
					<globmapper from="*" to="lib/*" />
				</chainedmapper>
			</mapper>

			<path>
				<fileset dir="${dist}/lib">
					<include name="**/*.jar" />
				</fileset>
			</path>
		</pathconvert>
		<!--Create an sh file to run for linux.-->
		<echo file="${dist}/Promasi-Desktop.sh">java -classpath ${PromasiDesktopJarName}:${PromasiDesktopLibsUnix} ${PromasiDesktopMainClass}</echo>
		<chmod perm="ugo+rx" file="${dist}/Promasi-Desktop.sh" />
		<!--Create a bat file to run for windows-->
		<echo file="${dist}/Promasi-Desktop.bat">java -classpath ${PromasiDesktopJarName};${PromasiDesktopLibsWindows} ${PromasiDesktopMainClass}</echo>
		<chmod perm="ugo+rx" file="${dist}/Promasi-Desktop.bat" />

		<copy todir="${dist}/Data">
			<fileset dir="Data" />
		</copy>
	</target>

	<!--Creates the core jar-->
	<target name="CoreJar" depends="Core">
		<!--Create the jar file-->
		<jar jarfile="${dist}/lib/Core-${Version}.jar" basedir="${build}" includes="org/promasi/core/**">
			<manifest>
				<attribute name="Created-By" value="Grigoriadis Grigorios,Nikos Petalidis" />
				<attribute name="Specification-Version" value="${Version}" />
				<attribute name="Specification-Title" value="Core" />
				<attribute name="Implementation-Version" value="${Version}" />
				<attribute name="Implementation-Title" value="org.promasi" />
			</manifest>
		</jar>
	</target>

	<!--Creates the Communication jar-->
	<target name="CommunicationJar" depends="Communication">
		<!--Create the jar file-->
		<jar jarfile="${dist}/lib/Communication-${Version}.jar" basedir="${build}" includes="org/promasi/communication/**">
			<manifest>
				<attribute name="Created-By" value="Grigoriadis Grigorios,Nikos Petalidis" />
				<attribute name="Specification-Version" value="${Version}" />
				<attribute name="Specification-Title" value="Communication" />
				<attribute name="Implementation-Version" value="${Version}" />
				<attribute name="Implementation-Title" value="org.promasi" />
			</manifest>
		</jar>
	</target>

	<!--Creates the utilities jar-->
	<target name="UtilitiesJar" depends="Utilities">
		<!--Create the jar file-->
		<jar jarfile="${dist}/lib/Utilities-${Version}.jar" basedir="${build}" includes="org/promasi/utilities/**">
			<manifest>
				<attribute name="Created-By" value="Grigoriadis Grigorios,Nikos Petalidis" />
				<attribute name="Specification-Version" value="${Version}" />
				<attribute name="Specification-Title" value="Utilities" />
				<attribute name="Implementation-Version" value="${Version}" />
				<attribute name="Implementation-Title" value="org.promasi" />
			</manifest>
		</jar>
	</target>

	<!--Creates the shell jar-->
	<target name="ShellJar" depends="Shell">
		<!--Create the jar file-->
		<jar jarfile="${dist}/lib/Shell-${Version}.jar" basedir="${build}" includes="org/promasi/shell/**">
			<manifest>
				<attribute name="Created-By" value="Grigoriadis Grigorios,Nikos Petalidis" />
				<attribute name="Specification-Version" value="${Version}" />
				<attribute name="Specification-Title" value="Shell" />
				<attribute name="Implementation-Version" value="${Version}" />
				<attribute name="Implementation-Title" value="org.promasi" />
			</manifest>
		</jar>
	</target>

	<!--Creates the model jar-->
	<target name="ModelJar" depends="Model">
		<!--Create the jar file-->
		<jar jarfile="${dist}/lib/Model-${Version}.jar" basedir="${build}" includes="org/promasi/model/**">
			<manifest>
				<attribute name="Created-By" value="Grigoriadis Grigorios,Nikos Petalidis" />
				<attribute name="Specification-Version" value="${Version}" />
				<attribute name="Specification-Title" value="Model" />
				<attribute name="Implementation-Version" value="${Version}" />
				<attribute name="Implementation-Title" value="org.promasi" />
			</manifest>
		</jar>
	</target>

	<!--Creates a sources file-->
	<target name="dist" depends="CoreDesignerJar,PromasiDesktopJar,Tests">
		<!--Run the tests-->
		<junit>
			<classpath>
				<pathelement location="${buildTests}" />
				<pathelement location="${build}" />
				<pathelement path="${java.class.path}" />
				<filelist refid="testDependencies" />
				<filelist refid="allDependencies" />
			</classpath>
			<batchtest todir="${testReports}">
				<formatter type="brief" />
				<fileset dir="${CoreTests}">
					<include name="**/*Tester.java" />
				</fileset>
			</batchtest>
		</junit>
		<!--Generate source folder-->
		<mkdir dir="${dist}/src" />
		<copy todir="${dist}/src">
			<fileset dir="${CoreSrc}" />
			<fileset dir="${ModelSrc}" />
			<fileset dir="${UtilitiesSrc}" />
			<fileset dir="${CommunicationSrc}" />
			<fileset dir="${ShellSrc}" />
			<fileset dir="${UISrc}" />
		</copy>
		<!--Generate javadoc-->
		<mkdir dir="${dist}/docs" />
		<javadoc destdir="${dist}/docs" private="on" author="true" version="true" use="true">
			<fileset dir="${CoreSrc}" includes="**/*.java" />
			<fileset dir="${ModelSrc}" includes="**/*.java" />
			<fileset dir="${UtilitiesSrc}" includes="**/*.java" />
			<fileset dir="${CommunicationSrc}" includes="**/*.java" />
			<fileset dir="${ShellSrc}" includes="**/*.java" />
			<fileset dir="${UISrc}" includes="**/*.java" />
		</javadoc>
		<!--Zip all of them -->
		<zip destfile="${releases}/Promasi-${Version}.zip" basedir="${dist}" />

		<!--Clear all -->
		<delete dir="${buildRoot}" />
		<delete dir="${dist}" />
	</target>
</project>